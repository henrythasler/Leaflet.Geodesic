# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

permissions:
  contents: read # This is required to allow the workflow to read the repository contents

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  release:
    types: [ published ]

jobs:
  linter:
    # This job runs the linter to ensure code quality
    # It runs before the test and build jobs to catch issues early
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Use Node.js 20
      uses: actions/setup-node@v4
      with:
        node-version: 22
        cache: 'npm'
    - name: Install dependencies
      run: npm ci
    - name: Run linter
      run: npm run linter

  test:
    runs-on: ubuntu-latest
    needs: linter
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Use Node.js 20
      uses: actions/setup-node@v4
      with:
        node-version: 22
        cache: 'npm'
    - name: Install dependencies
      run: npm ci
    - name: Run tests
      run: npm test
    - name: Upload coverage
      uses: coverallsapp/github-action@v2 # https://github.com/coverallsapp/github-action
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        path-to-lcov: ./coverage/lcov.info # Adjust this path if your coverage report is located elsewhere

  build:
    runs-on: ubuntu-latest
    needs: test
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x, 24.x] # Define the Node.js versions to test against
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - name: Install dependencies
      run: npm ci
    - name: Build project
      run: npm run build      

  publish:
    permissions:
      contents: write # This is required to allow the workflow to create releases and upload assets
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
    - name: Get existing release info
      id: get_release
      run: |
        release=$(gh api repos/${{ github.repository }}/releases/tags/${{ github.ref_name }})
        release_body=$(echo "$release" | jq -r .body | sed ':a;N;$!ba;s/\n/\\n/g')
        echo "release_body=$release_body" >> $GITHUB_OUTPUT
        stripped_version=${{ github.event.release.tag_name }}
        stripped_version=${stripped_version/v/}
        echo "stripped_version=$stripped_version" >> $GITHUB_OUTPUT
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Checkout code
      uses: actions/checkout@v4

    - name: Check version in package.json
      run: |
        version=$(jq -r .version package.json)
        if [[ "$version" != "${{ steps.get_release.outputs.stripped_version }}" ]]; then
          echo "Version in package.json ($version) does not match release tag (${{ steps.get_release.outputs.stripped_version }})"
          exit 1
        fi

    - name: Use Node.js 22
      uses: actions/setup-node@v4
      with:
        node-version: 22
        registry-url: https://registry.npmjs.org/

    - name: Install dependencies
      run: npm ci

    - name: Build project
      run: npm run build

    - name: Publish package
      run: npm publish #--dry-run
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }} # Ensure you have set this secret in your repository settings

    - name: get artefact hashes
      id: get_hashes
      run: |
        umd_hash=$(cat dist/leaflet.geodesic.umd.min.js.sha512)
        echo "umd_hash=$umd_hash" >> $GITHUB_OUTPUT

    - name: Update github release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ github.event.release.tag_name }}
        body: |
          ${{ steps.get_release.outputs.release_body }}
          
          ## CDN and download links

          * https://cdn.jsdelivr.net/npm/leaflet.geodesic@${{ steps.get_release.outputs.stripped_version }}/dist/leaflet.geodesic.umd.min.js
          * https://unpkg.com/browse/leaflet.geodesic@${{ steps.get_release.outputs.stripped_version }}/dist/leaflet.geodesic.umd.min.js

          ## Subresource Integrity

          [Learn more about Subresource Integrity](https://developer.mozilla.org/en-US/docs/Web/Security/Subresource_Integrity)

          `integrity="sha512-${{ steps.get_hashes.outputs.umd_hash }}"`

      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is automatically provided by GitHub Actions
        GITHUB_REPOSITORY: ${{ github.repository }} # The repository where the release will be created